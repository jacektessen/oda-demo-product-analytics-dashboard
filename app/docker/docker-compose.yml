version: '3.8'

services:
  redis:
    build:
      context: ../redis
      dockerfile: Dockerfile
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    environment:
      - REDIS_PORT=${REDIS_PORT}
    volumes:
      - redis-data:/data
    networks:
      - oda-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  api-service:
    build:
      context: ../api-service
      dockerfile: Dockerfile
    ports:
      - "${FASTAPI_PORT}:${FASTAPI_PORT}"
    environment:
      - REDIS_URL=${REDIS_URL}
      - FASTAPI_PORT=${FASTAPI_PORT}
      - ODA_API_BASE_URL=${ODA_API_BASE_URL}
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app/src
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - oda-network
    restart: unless-stopped

  nextjs:
    build:
      context: ../client
      dockerfile: Dockerfile
      target: deps
      args:
        - FASTAPI_INTERNAL_URL=http://localhost:${FASTAPI_PORT}
        - NEXT_PUBLIC_API_URL=http://localhost:${FASTAPI_PORT}/api
    volumes:
      - ../client:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    ports:
      - "${NEXTJS_PORT}:${NEXTJS_PORT}"
      - "9229:9229"  # Debug port
    environment:
      - FASTAPI_INTERNAL_URL=http://api-service:${FASTAPI_PORT}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - PORT=${NEXTJS_PORT}
    depends_on:
      - api-service
    networks:
      - oda-network

volumes:
  redis-data:

networks:
  oda-network:
    driver: bridge